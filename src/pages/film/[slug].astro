---
import Layout from '../../layouts/Layout.astro';

import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const films = await getCollection('film');
  return films.map(film => ({
    params: { slug: film.id },
    props: { film: film.data[0] },
  }));
}

// type Film = CollectionEntry<'film'>['data'][0];
// const { film } = Astro.props as { film: Film };
const { film } = Astro.props;

const highlightColor = film.color;

// split directors and cast into portions
const chunkSize = 3;

var directorPortions: string[][] = [];
for (let i = 0; i < film.directorlist.length; i += chunkSize) {
  var directorChunk = film.directorlist.slice(i, i + chunkSize);
  directorPortions.push(directorChunk);
}

var castPortions: any[][] = [];
for (let i = 0; i < Object.keys(film.castlist).length; i+= chunkSize) {
  var castChunk = Object.entries(film.castlist).slice(i, i + chunkSize);
  castPortions.push(castChunk);
}

// get image paths
const titleclean = film.link.replaceAll('-', '')
const img1Path = '/src/images/stills/' + titleclean + '01.jpg'
const img2Path = '/src/images/stills/' + titleclean + '02.jpg'
const img3Path = '/src/images/stills/' + titleclean + '03.jpg'
const posterPath = '/src/images/posters/' + titleclean + '_' + film.year +'.jpg'
---

<Layout title={film.title} bgColor="bg-lightgrey">
	<main class="h-screen overflow-y-scroll snap-y snap-mandatory">
    <div class="snap-start px-10 pt-6 mb-14 w-fit">
      <a class="px-4 py-2 font-bold border-2 border-black text-black hover:text-white hover:bg-black"
         href="/">
        BACK TO MOVIE LIST
      </a>
    </div>

    <section class="snap-always snap-start px-10 pb-16 grid grid-cols-12 gap-6">
      <div class="flex flex-col col-span-5 gap-6">
        <h1>{film.title}</h1>
        <h5 class="font-palatino">{film.year} / {film.genrelist.join(", ")} / {Math.floor(film.runtime / 60)}H {film.runtime % 60}M</h5>
      </div>

      <div class="flex flex-col col-start-7 col-span-5 gap-6">
        <p class="mt-8 highlight">{film.tagline.toUpperCase()}</p>
        <p>{film.summary}</p>
        <h4 class="mt-20">{film.caption}</h4>
      </div>
    </section>

    <section class="snap-always snap-start px-10 pt-16 pb-32">
      <div class="grid grid-cols-12 gap-6">
        <div class="col-span-5 flex flex-col gap-16">
          <div class="flex flex-grow aspect-[1280/706]">
            <img src={img1Path} class="w-full object-cover" />
          </div>
          <div class="grid grid-cols-5 gap-6">
            <div class="col-span-4">
              <p>{film.description}</p>
            </div>
          </div>
        </div>
        <div class="col-start-7 col-span-6 flex flex-col justify-between">
          <div class="grid grid-cols-6 gap-6">
            <div class="col-span-6 flex flex-col gap-6">
              <div class="flex flex-grow aspect-[1280/706]">
                <img src={img2Path} class="w-full object-cover" />
              </div>
              <div class="col-span-5">
                <p class="italic">{film.quote}</p>
              </div>
            </div>
          </div>
          <div class="mt-8 grid grid-cols-6 gap-6">
            <div class="col-start-3 col-span-4">
              <div class="flex flex-grow aspect-[1280/706]">
                <img src={img3Path} class="w-full object-cover" />
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <section class="snap-always snap-start bg-darkgrey px-10 pb-8 flex flex-col">
      <div class="py-16 grid grid-cols-12 gap-6">
        <div class="col-start-4 col-span-6 flex flex-col gap-12">
          <h3>Cast</h3>
          <div class="flex flex-col gap-8">
            <!-- cast -->
            {castPortions.map(castPortion => (
              <div class="grid grid-cols-3">
                {castPortion.map(([actor, character]) => (
                  <div class="col-span-1 flex flex-col gap-2">
                    <p>{actor}</p>
                    <p class="highlight">{character}</p>
                  </div>
                ))}
              </div>
            ))}
            <!-- director -->
            <div class="mt-4">
              {directorPortions.map(directorPortion => (
                <div class="grid grid-cols-3">
                  {directorPortion.map(director => (
                    <div class="col-span-1 flex flex-col gap-2">
                      <p>{director}</p>
                      <p class="highlight">Director</p>
                    </div>
                  ))}
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
      <div class="flex flex-row justify-between">
        <p>{film.title}</p>
        <p>{film.year}</p>
      </div>
    </section>

    <section class="snap-end flex flex-row text-white">
      <div class="bg-black px-20 pt-16 pb-24 basis-1/3">
        <img src=`${posterPath}`>
      </div>
      <div class="highlightBg px-6 pt-16 pb-24 basis-2/3 flex flex-col gap-8 justify-between">
        <div class="ml-8 grid grid-cols-8 gap-6">
          <div class="col-span-6">
            <h2 class="font-palatino">{film.title.toUpperCase()}</h2>
          </div>
        </div>
        <div class="ml-8 flex flex-col gap-8 w-fit">
          <h3>{film.ratingstars}</h3>
          <a class="px-20 py-14 font-bold border-2 border-white highlightHover hover:bg-white"
             href=`https://letterboxd.com/film/${film.link}`>
            READ REVIEWS ON LETTERBOXD
          </a>
        </div>
      </div>
    </section>

	</main>
</Layout>

<style define:vars={{highlightColor}}>
  .highlight {
    color: var(--highlightColor);
  }

  .highlightHover:hover {
    color: var(--highlightColor);
  }

  .highlightBg {
    background-color: var(--highlightColor);
  }
</style>
